name: Regression Testing CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch: {}

permissions:
  contents: read
  actions: read
  checks: write
  pull-requests: write

env:
  SPRING_DATASOURCE_URL: jdbc:mysql://127.0.0.1:3306/automation_testing?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC
  SPRING_DATASOURCE_USERNAME: root
  SPRING_DATASOURCE_PASSWORD: root@123

jobs:
  regression-tests:
    runs-on: ubuntu-latest
    timeout-minutes: 60

    services:
      mysql:
        image: mysql:8.0
        ports:
          - 3306:3306
        env:
          MYSQL_ROOT_PASSWORD: root@123
          MYSQL_DATABASE: automation_testing
        options: >-
          --health-cmd="mysqladmin ping --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=10

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 21 and Maven cache
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '21'
          cache: maven

      - name: Install Google Chrome
        uses: browser-actions/setup-chrome@v1
        with:
          chrome-version: stable
        id: setup-chrome

      - name: Setup ChromeDriver
        run: |
          echo "✅ Chrome installed at: ${{ steps.setup-chrome.outputs.chrome-path }}"
          google-chrome --version
          mkdir -p /tmp/chrome-user-data
          chmod 777 /tmp/chrome-user-data
          sudo apt-get install -y xvfb
          export DISPLAY=:99
          Xvfb :99 -screen 0 1920x1080x24 > /dev/null 2>&1 &
          sleep 3
          echo "🔧 Chrome configuration for CI:"
          echo "  - Headless mode: enabled"
          echo "  - User data dir: /tmp/chrome-user-data"
          echo "  - No sandbox: enabled for CI"
          echo "  - Virtual display: :99"

      - name: Wait for MySQL to be ready
        run: |
          sudo apt-get update && sudo apt-get install -y mysql-client
          echo "⏳ Waiting for MySQL to be ready..."
          for i in {1..30}; do
            if mysql -h 127.0.0.1 -P 3306 -u root -proot@123 -e "SELECT 1;" &>/dev/null; then
              echo "✅ MySQL is ready!"
              mysql -h 127.0.0.1 -P 3306 -u root -proot@123 -e "SHOW DATABASES;"
              break
            fi
            echo "⏳ Attempt $i/30 - MySQL not ready yet..."
            sleep 2
          done

      - name: Clean and prepare test directories
        working-directory: regression-test-suite
        run: |
          echo "🧹 Cleaning old reports and artifacts..."
          rm -rf test-output/reports/* artifacts/* target/surefire-reports/* || true
          mkdir -p test-output/reports artifacts target/surefire-reports
          echo "📁 Directory structure:"
          ls -la

      - name: Make Maven wrapper executable
        working-directory: regression-test-suite
        run: chmod +x ./mvnw

      - name: Run Regression Tests (CombinedSuiteRunner)
        working-directory: regression-test-suite
        env:
          HEADLESS: true
          CHROME_BIN: ${{ steps.setup-chrome.outputs.chrome-path }}
          CHROME_USER_DATA_DIR: /tmp/chrome-user-data
          DISPLAY: :99
          CHROME_OPTIONS: "--headless --no-sandbox --disable-dev-shm-usage --disable-gpu --window-size=1920,1080 --user-data-dir=/tmp/chrome-user-data"
        run: |
          echo "🚀 Starting CombinedSuiteRunner execution..."
          ./mvnw clean compile test-compile
          ./mvnw test -Dtest=com.testframework.regression.RegressionTestSuiteFrameworkApplicationTests -Dspring.profiles.active=test -Dmaven.test.failure.ignore=true || true
          ./mvnw test -Dtest=tests.diagnostic.SpringContextDiagnosticTest -Dspring.profiles.active=test -Dmaven.test.failure.ignore=true || true
          ./mvnw test -Dtest=tests.simple.SimplePassingTest -Dmaven.test.failure.ignore=true || true
          ./mvnw test -Dtest=tests.combined.CombinedSuiteRunner -Dspring.profiles.active=test -Dmaven.test.failure.ignore=true -Dselenium.headless=true -Dwebdriver.chrome.driver=/usr/bin/chromedriver -Dchrome.binary="$CHROME_BIN" -Dchrome.user.data.dir="$CHROME_USER_DATA_DIR" -Dsurefire.printSummary=true -Dsurefire.useFile=true -Dsurefire.reportFormat=xml -Dlogging.level.com.testframework=DEBUG -Dlogging.level.tests=DEBUG -Dlogging.level.org.springframework.boot=INFO -Dlogging.level.org.springframework.context=INFO -X || true
        continue-on-error: true

      - name: Debug - List generated reports and artifacts
        if: always()
        working-directory: regression-test-suite
        run: |
          find target/surefire-reports test-output artifacts -type f || echo "No reports or artifacts found"

      - name: Publish Test Results
        uses: dorny/test-reporter@v1
        if: always() && hashFiles('regression-test-suite/target/surefire-reports/*.xml') != ''
        with:
          name: Regression Test Results
          path: 'regression-test-suite/target/surefire-reports/*.xml'
          reporter: java-junit
          fail-on-error: false

      - name: Upload Surefire Test Reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: surefire-reports-${{ github.run_number }}
          path: regression-test-suite/target/surefire-reports/**/*
          retention-days: 30
          if-no-files-found: warn

      - name: Upload Custom Test Reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: custom-test-reports-${{ github.run_number }}
          path: regression-test-suite/test-output/**/*
          retention-days: 30
          if-no-files-found: warn

      - name: Upload Test Artifacts (Screenshots, Logs, etc.)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-artifacts-${{ github.run_number }}
          path: regression-test-suite/artifacts/**/*
          retention-days: 30
          if-no-files-found: warn

      - name: Upload Maven Logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: maven-logs-${{ github.run_number }}
          path: regression-test-suite/target/**/*.log
          retention-days: 7
          if-no-files-found: ignore

      - name: Generate Test Summary
        if: always()
        working-directory: regression-test-suite
        run: |
          echo "## 🧪 Regression Test Execution Summary" >> $GITHUB_STEP_SUMMARY
          echo "- **Execution Time**: $(date)" >> $GITHUB_STEP_SUMMARY
          echo "- **Run Number**: ${{ github.run_number }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Commit**: ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
          SUREFIRE_COUNT=$(find target/surefire-reports -name "*.xml" 2>/dev/null | wc -l || echo "0")
          CUSTOM_COUNT=$(find test-output -name "*.html" -o -name "*.csv" 2>/dev/null | wc -l || echo "0")
          ARTIFACT_COUNT=$(find artifacts -type f 2>/dev/null | wc -l || echo "0")
          echo "### 📊 Generated Files:" >> $GITHUB_STEP_SUMMARY
          echo "- **Surefire Reports**: $SUREFIRE_COUNT files" >> $GITHUB_STEP_SUMMARY
          echo "- **Custom Reports**: $CUSTOM_COUNT files" >> $GITHUB_STEP_SUMMARY
          echo "- **Artifacts**: $ARTIFACT_COUNT files" >> $GITHUB_STEP_SUMMARY
