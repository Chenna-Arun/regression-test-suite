name: Regression Testing CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch: {}

permissions:
  contents: read
  actions: read
  checks: write
  pull-requests: write

env:
  SPRING_DATASOURCE_URL: jdbc:mysql://127.0.0.1:3306/automation_testing?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC
  SPRING_DATASOURCE_USERNAME: root
  SPRING_DATASOURCE_PASSWORD: root@123

jobs:
  regression-tests:
    runs-on: ubuntu-latest
    timeout-minutes: 60

    services:
      mysql:
        image: mysql:8.0
        ports:
          - 3306:3306
        env:
          MYSQL_ROOT_PASSWORD: root@123
          MYSQL_DATABASE: automation_testing
        options: >-
          --health-cmd="mysqladmin ping --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=10

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 21 and Maven cache
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '21'
          cache: maven

      - name: Install Google Chrome
        uses: browser-actions/setup-chrome@v1
        with:
          chrome-version: stable
        id: setup-chrome

      - name: Install ChromeDriver
        run: |
          sudo apt-get update
          sudo apt-get install -y unzip xvfb
          CHROME_VER=$(google-chrome --version | grep -oP '\d+\.\d+\.\d+')
          echo "Chrome version: $CHROME_VER"
          wget -q "https://chromedriver.storage.googleapis.com/$CHROME_VER/chromedriver_linux64.zip"
          unzip chromedriver_linux64.zip
          sudo mv chromedriver /usr/bin/chromedriver
          sudo chmod +x /usr/bin/chromedriver
          echo "✅ ChromeDriver installed"
          export DISPLAY=:99
          Xvfb :99 -screen 0 1920x1080x24 > /dev/null 2>&1 &
          mkdir -p /tmp/chrome-user-data

      - name: Wait for MySQL to be ready
        run: |
          sudo apt-get install -y mysql-client
          for i in {1..30}; do
            if mysql -h 127.0.0.1 -P 3306 -u root -proot@123 -e "SELECT 1;" &>/dev/null; then
              echo "✅ MySQL is ready"
              break
            fi
            echo "⏳ Waiting for MySQL ($i/30)..."
            sleep 2
          done

      - name: Clean and prepare directories
        working-directory: regression-test-suite
        run: |
          rm -rf test-output/reports artifacts target/surefire-reports || true
          mkdir -p test-output/reports artifacts target/surefire-reports

      - name: Make Maven wrapper executable
        working-directory: regression-test-suite
        run: chmod +x ./mvnw

      - name: Run Regression Tests
        working-directory: regression-test-suite
        env:
          HEADLESS: true
          CHROME_BIN: /usr/bin/google-chrome
          CHROME_USER_DATA_DIR: /tmp/chrome-user-data
          DISPLAY: :99
          CHROME_OPTIONS: "--headless --no-sandbox --disable-dev-shm-usage --disable-gpu --window-size=1920,1080 --user-data-dir=/tmp/chrome-user-data"
        run: |
          echo "🚀 Starting regression tests..."
          ./mvnw clean test \
            -Dspring.profiles.active=test \
            -Dchrome.binary="$CHROME_BIN" \
            -Dchrome.user.data.dir="$CHROME_USER_DATA_DIR" \
            -Dselenium.headless=true \
            -Dsurefire.printSummary=true \
            -Dsurefire.useFile=true \
            -Dsurefire.reportFormat=xml \
            -Dmaven.test.failure.ignore=true || true

      - name: Debug Reports
        working-directory: regression-test-suite
        run: |
          echo "🔍 Checking surefire reports..."
          ls -la target/surefire-reports || echo "No surefire reports found"
          echo "🔍 Checking custom reports..."
          ls -la test-output || echo "No custom reports found"
          echo "🔍 Checking artifacts..."
          ls -la artifacts || echo "No artifacts found"

      - name: Publish Test Results
        uses: dorny/test-reporter@v1
        if: always() && hashFiles('regression-test-suite/target/surefire-reports/*.xml') != ''
        with:
          name: Regression Test Results
          path: 'regression-test-suite/target/surefire-reports/*.xml'
          reporter: java-junit
          fail-on-error: false

      - name: Upload Surefire Reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: surefire-reports-${{ github.run_number }}
          path: regression-test-suite/target/surefire-reports/**/*
          retention-days: 30
          if-no-files-found: warn

      - name: Upload Custom Reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: custom-reports-${{ github.run_number }}
          path: regression-test-suite/test-output/**/*
          retention-days: 30
          if-no-files-found: warn

      - name: Upload Artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: artifacts-${{ github.run_number }}
          path: regression-test-suite/artifacts/**/*
          retention-days: 30
          if-no-files-found: warn

      - name: Generate Test Summary
        if: always()
        working-directory: regression-test-suite
        run: |
          echo "## 🧪 Regression Test Execution Summary" >> $GITHUB_STEP_SUMMARY
          echo "- **Execution Time**: $(date)" >> $GITHUB_STEP_SUMMARY
          echo "- **Run Number**: ${{ github.run_number }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Commit**: ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
          SUREFIRE_COUNT=$(find target/surefire-reports -name "*.xml" 2>/dev/null | wc -l || echo "0")
          CUSTOM_COUNT=$(find test-output -type f 2>/dev/null | wc -l || echo "0")
          ARTIFACT_COUNT=$(find artifacts -type f 2>/dev/null | wc -l || echo "0")
          echo "- **Surefire Reports**: $SUREFIRE_COUNT files" >> $GITHUB_STEP_SUMMARY
          echo "- **Custom Reports**: $CUSTOM_COUNT files" >> $GITHUB_STEP_SUMMARY
          echo "- **Artifacts**: $ARTIFACT_COUNT files" >> $GITHUB_STEP_SUMMARY
