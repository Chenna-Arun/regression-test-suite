name: Regression Testing CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch: {}

permissions:
  contents: read
  actions: read
  checks: write
  pull-requests: write

env:
  SPRING_DATASOURCE_URL: jdbc:mysql://127.0.0.1:3306/automation_testing?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC
  SPRING_DATASOURCE_USERNAME: root
  SPRING_DATASOURCE_PASSWORD: root@123

jobs:
  regression-tests:
    runs-on: ubuntu-latest
    timeout-minutes: 60

    services:
      mysql:
        image: mysql:8.0
        ports:
          - 3306:3306
        env:
          MYSQL_ROOT_PASSWORD: root@123
          MYSQL_DATABASE: automation_testing
        options: >-
          --health-cmd="mysqladmin ping --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=10

    steps:
      # 1️⃣ Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2️⃣ Set up JDK 21 with Maven cache
      - name: Set up JDK 21 and Maven cache
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '21'
          cache: maven

      # 3️⃣ Install Google Chrome & ChromeDriver (version-matched)
      - name: Install Google Chrome and ChromeDriver
        run: |
          echo "🚀 Installing Google Chrome..."
          sudo apt-get update
          sudo apt-get install -y wget gnupg unzip xvfb
          wget -q -O - https://dl.google.com/linux/linux_signing_key.pub | sudo gpg --dearmor -o /usr/share/keyrings/google-linux-signing-keyring.gpg
          echo "deb [arch=amd64 signed-by=/usr/share/keyrings/google-linux-signing-keyring.gpg] http://dl.google.com/linux/chrome/deb/ stable main" | \
            sudo tee /etc/apt/sources.list.d/google-chrome.list
          sudo apt-get update
          sudo apt-get install -y google-chrome-stable

          echo "🌐 Installed Chrome version:"
          google-chrome --version

          echo "🧩 Installing matching ChromeDriver..."
          CHROME_VERSION=$(google-chrome --version | grep -oP '\d+' | head -1)
          DRIVER_VERSION=$(curl -sS "https://googlechromelabs.github.io/chrome-for-testing/latest-patch-versions-per-build.json" | \
            jq -r ".builds[\"$CHROME_VERSION\"].version")
          if [ -z "$DRIVER_VERSION" ]; then
            DRIVER_VERSION=$(curl -sS https://chromedriver.storage.googleapis.com/LATEST_RELEASE)
          fi
          echo "Downloading ChromeDriver version: $DRIVER_VERSION"
          wget -q "https://edgedl.me.gvt1.com/edgedl/chrome/chrome-for-testing/$DRIVER_VERSION/linux64/chromedriver-linux64.zip"
          unzip chromedriver-linux64.zip
          sudo mv chromedriver-linux64/chromedriver /usr/local/bin/
          sudo chmod +x /usr/local/bin/chromedriver

          echo "✅ Installed ChromeDriver:"
          chromedriver --version

      # 4️⃣ Start virtual display
      - name: Setup Virtual Display
        run: |
          Xvfb :99 -screen 0 1920x1080x24 > /dev/null 2>&1 &
          echo "DISPLAY=:99" >> $GITHUB_ENV
          mkdir -p /tmp/chrome-user-data
          echo "✅ Virtual display setup complete"

      # 5️⃣ Wait for MySQL service
      - name: Wait for MySQL to be ready
        run: |
          sudo apt-get install -y mysql-client
          echo "⏳ Waiting for MySQL to be ready..."
          for i in {1..60}; do
            if mysql -h 127.0.0.1 -P 3306 -u root -proot@123 -e "SELECT 1;" &>/dev/null; then
              echo "✅ MySQL is ready"
              break
            fi
            echo "⏳ Attempt $i/60 - MySQL not ready yet..."
            sleep 2
          done

      # 6️⃣ Prepare directories
      - name: Prepare directories
        working-directory: regression-test-suite
        run: |
          rm -rf test-output reports artifacts target/surefire-reports || true
          mkdir -p test-output reports artifacts target/surefire-reports

      # 7️⃣ Make Maven wrapper executable
      - name: Make Maven wrapper executable
        working-directory: regression-test-suite
        run: chmod +x ./mvnw

      # 8️⃣ Run regression tests
      - name: Run Regression Tests
        working-directory: regression-test-suite
        env:
          CHROME_BIN: /usr/bin/google-chrome
          DISPLAY: :99
        run: |
          echo "🚀 Running regression tests..."
          ./mvnw clean test \
            -Dspring.profiles.active=test \
            -Dwebdriver.chrome.driver=/usr/local/bin/chromedriver \
            -Dselenium.headless=true \
            -Dmaven.test.failure.ignore=true
        continue-on-error: true

      # 9️⃣ Upload test reports (Surefire)
      - name: Upload Surefire Reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: surefire-reports-${{ github.run_number }}
          path: regression-test-suite/target/surefire-reports/**/*.xml
          retention-days: 30
          if-no-files-found: warn

      # 🔟 Upload any generated test output or artifacts
      - name: Upload Custom Reports and Artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-outputs-${{ github.run_number }}
          path: |
            regression-test-suite/test-output/**
            regression-test-suite/artifacts/**
          retention-days: 30
          if-no-files-found: ignore
